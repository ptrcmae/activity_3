{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      products: [{\n        id: 1,\n        name: \"Lotion\",\n        price: 300\n      }, {\n        id: 2,\n        name: \"Body Scrub\",\n        price: 120\n      }, {\n        id: 3,\n        name: \"Hand Cream\",\n        price: 99\n      }, {\n        id: 4,\n        name: \"Eye Cream\",\n        price: 350\n      }, {\n        id: 5,\n        name: \"Toner\",\n        price: 100\n      }, {\n        id: 6,\n        name: \"Facial Wash\",\n        price: 129\n      }, {\n        id: 7,\n        name: \"Mosturizer\",\n        price: 249\n      }, {\n        id: 8,\n        name: \"Sunscreen\",\n        price: 200\n      }, {\n        id: 9,\n        name: \"Serum\",\n        price: 175\n      }, {\n        id: 10,\n        name: \"Sheet Mask\",\n        price: 55\n      }],\n      cart: []\n    };\n  },\n  computed: {\n    total() {\n      return this.cart.reduce((acc, item) => acc + item.product.price * item.quantity, 0);\n    }\n  },\n  methods: {\n    addToCart(product) {\n      const existingItem = this.cart.find(item => item.product.id === product.id);\n      if (existingItem) {\n        existingItem.quantity++;\n      } else {\n        this.cart.push({\n          product: product,\n          quantity: 1\n        });\n      }\n    },\n    removeFromCart(index) {\n      this.cart.splice(index, 1);\n    },\n    updateQuantity(index) {\n      const item = this.cart[index];\n      if (item.quantity < 1) {\n        item.quantity = 1;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","props","msg","String","data","products","id","price","cart","computed","total","reduce","acc","item","product","quantity","methods","addToCart","existingItem","find","push","removeFromCart","index","splice","updateQuantity"],"sources":["C:\\activity_3\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n  <center>\n    <h1 id=\"shopping-cart-title\">Shopping List</h1>\n    <div id=\"app\">\n      <div class=\"products\">\n        <div class=\"product\" v-for=\"product in products\" :key=\"product.id\">\n          <h4>\n            {{ product.name }} - ₱{{ product.price }}\n            <button class=\"button button1\" @click=\"addToCart(product)\">Add to Cart</button>\n          </h4>\n        </div>\n      </div>\n      <hr />\n\n      <div class=\"cart\">\n        <h2>My Cart</h2>\n        <div class=\"cart-item\">\n          <center>\n          <table>\n            <thead>\n              <tr>\n                <th>Product</th>\n                <th>Price</th>\n                <th>Qty.</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tr v-for=\"(item, index) in cart\" :key=\"item.product.id\">\n              <td>{{ item.product.name }}</td>\n              <td> ₱{{ item.product.price }}</td>\n              <td><input type=\"number\" min=\"1\" v-model=\"item.quantity\" @change=\"updateQuantity(index)\"/></td>\n              <td><button class=\"button button2\" @click=\"removeFromCart(index)\">Remove</button></td>\n            </tr>\n          </table>\n        </center>\n          <br />\n          <div><strong>Total: ₱{{ total }}</strong></div>\n        </div>\n      </div>\n    </div>\n  </center>\n</template>\n\n<script>\n\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      products: [\n        { id: 1, name: \"Lotion\", price: 300 },\n        { id: 2, name: \"Body Scrub\", price: 120 },\n        { id: 3, name: \"Hand Cream\", price: 99 },\n        { id: 4, name: \"Eye Cream\", price: 350 },\n        { id: 5, name: \"Toner\", price: 100 },\n        { id: 6, name: \"Facial Wash\", price: 129 },\n        { id: 7, name: \"Mosturizer\", price: 249 },\n        { id: 8, name: \"Sunscreen\", price: 200 },\n        { id: 9, name: \"Serum\", price: 175 },\n        { id: 10, name: \"Sheet Mask\", price: 55 },\n      ],\n      cart: [],\n    };\n  },\n  computed: {\n    total() {\n      return this.cart.reduce(\n        (acc, item) => acc + item.product.price * item.quantity,\n        0\n      );\n    },\n  },\n  methods: {\n    addToCart(product) {\n      const existingItem = this.cart.find(\n        (item) => item.product.id === product.id\n      );\n      if (existingItem) {\n        existingItem.quantity++;\n      } else {\n        this.cart.push({ product: product, quantity: 1 });\n      }\n    },\n    removeFromCart(index) {\n      this.cart.splice(index, 1);\n    },\n    updateQuantity(index) {\n      const item = this.cart[index];\n      if (item.quantity < 1) {\n        item.quantity = 1;\n      }\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n      .products {\n        display: justify;\n        flex-wrap: center;\n      }\n      .product {\n        margin-right: 10px; /* Add margin between products */\n      }\n      .cart-item {\n        display: justify;\n        align-items: center; /* Align items vertically */\n        justify-content: space-between;\n        margin-bottom: 5px;\n      }\n      /* Added style for shopping cart title */\n      #shopping-cart-title {\n        text-align: center;\n      }\n      input {\n        width: 10%;\n\n      }\n      .button {\n        border: none;\n        color: white;\n        padding: 5px 15px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 10px;\n        margin: 4px 2px;\n        cursor: pointer;\n      }\n\n      .button1 {\n        background-color: #04AA6D;\n        border-radius: 12px;\n      } \n      .button2 {\n        background-color: #f44336;\n        border-radius: 12px;\n      } \n      table {\n        width: 50%;\n          display: center;\n          border-collapse: collapse;\n        }\n        th, td {\n            border: 1px solid #dddddd;\n            padding: 8px;\n            text-align: center;\n            \n        }\n        th {\n            background-color: #f2f2f2;\n        }\n</style>\n"],"mappings":";AA6CA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,CACR;QAAEC,EAAE,EAAE,CAAC;QAAEN,IAAI,EAAE,QAAQ;QAAEO,KAAK,EAAE;MAAI,CAAC,EACrC;QAAED,EAAE,EAAE,CAAC;QAAEN,IAAI,EAAE,YAAY;QAAEO,KAAK,EAAE;MAAI,CAAC,EACzC;QAAED,EAAE,EAAE,CAAC;QAAEN,IAAI,EAAE,YAAY;QAAEO,KAAK,EAAE;MAAG,CAAC,EACxC;QAAED,EAAE,EAAE,CAAC;QAAEN,IAAI,EAAE,WAAW;QAAEO,KAAK,EAAE;MAAI,CAAC,EACxC;QAAED,EAAE,EAAE,CAAC;QAAEN,IAAI,EAAE,OAAO;QAAEO,KAAK,EAAE;MAAI,CAAC,EACpC;QAAED,EAAE,EAAE,CAAC;QAAEN,IAAI,EAAE,aAAa;QAAEO,KAAK,EAAE;MAAI,CAAC,EAC1C;QAAED,EAAE,EAAE,CAAC;QAAEN,IAAI,EAAE,YAAY;QAAEO,KAAK,EAAE;MAAI,CAAC,EACzC;QAAED,EAAE,EAAE,CAAC;QAAEN,IAAI,EAAE,WAAW;QAAEO,KAAK,EAAE;MAAI,CAAC,EACxC;QAAED,EAAE,EAAE,CAAC;QAAEN,IAAI,EAAE,OAAO;QAAEO,KAAK,EAAE;MAAI,CAAC,EACpC;QAAED,EAAE,EAAE,EAAE;QAAEN,IAAI,EAAE,YAAY;QAAEO,KAAK,EAAE;MAAG,CAAC,CAC1C;MACDC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAACF,IAAI,CAACG,MAAM,CACrB,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAE,GAAIC,IAAI,CAACC,OAAO,CAACP,KAAI,GAAIM,IAAI,CAACE,QAAQ,EACvD,CACF,CAAC;IACH;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAACH,OAAO,EAAE;MACjB,MAAMI,YAAW,GAAI,IAAI,CAACV,IAAI,CAACW,IAAI,CAChCN,IAAI,IAAKA,IAAI,CAACC,OAAO,CAACR,EAAC,KAAMQ,OAAO,CAACR,EACxC,CAAC;MACD,IAAIY,YAAY,EAAE;QAChBA,YAAY,CAACH,QAAQ,EAAE;MACzB,OAAO;QACL,IAAI,CAACP,IAAI,CAACY,IAAI,CAAC;UAAEN,OAAO,EAAEA,OAAO;UAAEC,QAAQ,EAAE;QAAE,CAAC,CAAC;MACnD;IACF,CAAC;IACDM,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACd,IAAI,CAACe,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAC5B,CAAC;IACDE,cAAcA,CAACF,KAAK,EAAE;MACpB,MAAMT,IAAG,GAAI,IAAI,CAACL,IAAI,CAACc,KAAK,CAAC;MAC7B,IAAIT,IAAI,CAACE,QAAO,GAAI,CAAC,EAAE;QACrBF,IAAI,CAACE,QAAO,GAAI,CAAC;MACnB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}